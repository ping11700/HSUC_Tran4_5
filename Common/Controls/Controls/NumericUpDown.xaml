<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:attach="clr-namespace:Common.AttachedPproperty"
    xmlns:local="clr-namespace:Common.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Common;component/Resources/CommonResources/CommonResources.xaml" />
        <ResourceDictionary Source="/Common;component/Controls/_Styles/Buttons/Button_Path.xaml" />
    </ResourceDictionary.MergedDictionaries>




    <Style TargetType="{x:Type local:NumericUpDown}">
        <Setter Property="Background" Value="{DynamicResource Common_White}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Common_GrayWhite}" />
        <Setter Property="Foreground" Value="{DynamicResource Common_FontBlack}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CaretBrush" Value="{DynamicResource Common_Black21}" />
        <Setter Property="attach:BorderElement.CornerRadius" Value="{StaticResource Common_CornerRadius06}" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:NumericUpDown}">
                    <Border
                        x:Name="ROOT_Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{Binding Path=(attach:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBox
                                x:Name="PART_TextBox"
                                Margin="5,1,5,1"
                                VerticalAlignment="Stretch"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                BorderThickness="0"
                                CaretBrush="{TemplateBinding CaretBrush}"
                                Focusable="True"
                                Foreground="{TemplateBinding Foreground}"
                                IsReadOnly="{TemplateBinding IsReadOnly}" />
                            <Button
                                x:Name="UpButton"
                                Grid.Column="1"
                                Width="12"
                                Height="6"
                                Margin="0,0,6,10"
                                VerticalAlignment="Center"
                                attach:IconElement.Geometry="{StaticResource UpGeometry}"
                                Command="{Binding UpCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                Focusable="False"
                                Foreground="{Binding BorderBrush, ElementName=ROOT_Border}"
                                Style="{StaticResource PathButtonBaseStyle}"
                                Visibility="{TemplateBinding ShowUpDownButton,
                                                             Converter={StaticResource boolToVisibilityConverter}}" />
                            <Button
                                x:Name="DownButton"
                                Grid.Column="1"
                                Width="12"
                                Height="6"
                                Margin="0,10,6,0"
                                VerticalAlignment="Center"
                                attach:IconElement.Geometry="{StaticResource DownGeometry}"
                                Command="{Binding DownCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                Focusable="False"
                                Foreground="{Binding BorderBrush, ElementName=ROOT_Border}"
                                Style="{StaticResource PathButtonBaseStyle}"
                                Visibility="{TemplateBinding ShowUpDownButton,
                                                             Converter={StaticResource boolToVisibilityConverter}}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource Common_Gray}" />
                        </Trigger>


                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="IsError" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ROOT_Border" Property="BorderBrush" Value="{DynamicResource Common_Gray}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="PART_TextBox" Property="IsFocused" Value="true" />
                                <Condition Property="IsError" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ROOT_Border" Property="BorderBrush" Value="{DynamicResource Common_Blue01}" />
                        </MultiTrigger>
                        <Trigger Property="IsError" Value="true">
                            <Setter TargetName="ROOT_Border" Property="BorderBrush" Value="{StaticResource Common_Red}" />
                        </Trigger>

                        <Trigger Property="ShowUpDownButton" Value="False">
                            <Setter TargetName="PART_TextBox" Property="Margin" Value="2,0,2,1" />
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter TargetName="UpButton" Property="IsEnabled" Value="False" />
                            <Setter TargetName="DownButton" Property="IsEnabled" Value="False" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
