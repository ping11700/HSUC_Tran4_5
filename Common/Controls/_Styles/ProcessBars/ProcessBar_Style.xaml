<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <SolidColorBrush x:Key="ProgressBar.Progress" Color="#FF06B025" />
    <SolidColorBrush x:Key="ProgressBar.Background" Color="#FFE6E6E6" />
    <SolidColorBrush x:Key="ProgressBar.Border" Color="#FFBCBCBC" />


    <Style x:Key="ProcessBarStyle" TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="#FF00FFF5" />
        <Setter Property="Background" Value="#FF01479D" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="TemplateRoot">
                        <Border
                            Margin="0,3,0,3"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2" />
                        <Rectangle x:Name="PART_Track" Margin="0,3,0,3" />
                        <Canvas Panel.ZIndex="5">
                            <Grid Canvas.Left="{Binding ActualWidth, ElementName=PART_Indicator}" RenderTransformOrigin="0.5,0.5">
                                <Grid.RenderTransform>
                                    <ScaleTransform />
                                </Grid.RenderTransform>
                                <TextBlock
                                    Margin="0,-30,0,0"
                                    FontSize="18"
                                    Foreground="#FFB7FEFE"
                                    Text="{Binding Value, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ProgressBar}, StringFormat='{}{0}%'}" />
                                <Ellipse
                                    Width="8"
                                    Height="8"
                                    Margin="-3,1,0,0"
                                    HorizontalAlignment="Left"
                                    Fill="#FFB8FEFE"
                                    StrokeThickness="0">
                                    <Ellipse.Effect>
                                        <DropShadowEffect
                                            BlurRadius="15"
                                            Direction="2"
                                            ShadowDepth="-2"
                                            Color="White" />
                                    </Ellipse.Effect>
                                </Ellipse>
                            </Grid>
                        </Canvas>
                        <Border
                            x:Name="PART_Indicator"
                            Margin="0,3,0,3"
                            HorizontalAlignment="Left"
                            ClipToBounds="true"
                            CornerRadius="4">
                            <Grid>
                                <Border
                                    x:Name="Indicator"
                                    Background="{TemplateBinding Foreground}"
                                    CornerRadius="4" />
                                <Border
                                    x:Name="Animation"
                                    Background="{TemplateBinding Foreground}"
                                    CornerRadius="4"
                                    RenderTransformOrigin="0.5,0.5">
                                    <Border.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Border.RenderTransform>
                                </Border>
                            </Grid>

                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.25" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                            <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5" />
                                            <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5" />
                                            <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5" />
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="TemplateRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter TargetName="Indicator" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>